// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/akhettar/grpc-crud-demo/api (interfaces: BookstoreServer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	api "github.com/akhettar/grpc-crud-demo/api"
	gomock "github.com/golang/mock/gomock"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

// MockBookstoreServer is a mock of BookstoreServer interface
type MockBookstoreServer struct {
	ctrl     *gomock.Controller
	recorder *MockBookstoreServerMockRecorder
}

// MockBookstoreServerMockRecorder is the mock recorder for MockBookstoreServer
type MockBookstoreServerMockRecorder struct {
	mock *MockBookstoreServer
}

// NewMockBookstoreServer creates a new mock instance
func NewMockBookstoreServer(ctrl *gomock.Controller) *MockBookstoreServer {
	mock := &MockBookstoreServer{ctrl: ctrl}
	mock.recorder = &MockBookstoreServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBookstoreServer) EXPECT() *MockBookstoreServerMockRecorder {
	return m.recorder
}

// CreateBook mocks base method
func (m *MockBookstoreServer) CreateBook(arg0 context.Context, arg1 *api.CreateBookRequest) (*api.Book, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBook", arg0, arg1)
	ret0, _ := ret[0].(*api.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBook indicates an expected call of CreateBook
func (mr *MockBookstoreServerMockRecorder) CreateBook(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBook", reflect.TypeOf((*MockBookstoreServer)(nil).CreateBook), arg0, arg1)
}

// CreateShelf mocks base method
func (m *MockBookstoreServer) CreateShelf(arg0 context.Context, arg1 *api.CreateShelfRequest) (*api.Shelf, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShelf", arg0, arg1)
	ret0, _ := ret[0].(*api.Shelf)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateShelf indicates an expected call of CreateShelf
func (mr *MockBookstoreServerMockRecorder) CreateShelf(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShelf", reflect.TypeOf((*MockBookstoreServer)(nil).CreateShelf), arg0, arg1)
}

// DeleteBook mocks base method
func (m *MockBookstoreServer) DeleteBook(arg0 context.Context, arg1 *api.DeleteBookRequest) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBook", arg0, arg1)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteBook indicates an expected call of DeleteBook
func (mr *MockBookstoreServerMockRecorder) DeleteBook(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBook", reflect.TypeOf((*MockBookstoreServer)(nil).DeleteBook), arg0, arg1)
}

// DeleteShelf mocks base method
func (m *MockBookstoreServer) DeleteShelf(arg0 context.Context, arg1 *api.DeleteShelfRequest) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteShelf", arg0, arg1)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteShelf indicates an expected call of DeleteShelf
func (mr *MockBookstoreServerMockRecorder) DeleteShelf(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShelf", reflect.TypeOf((*MockBookstoreServer)(nil).DeleteShelf), arg0, arg1)
}

// GetBook mocks base method
func (m *MockBookstoreServer) GetBook(arg0 context.Context, arg1 *api.GetBookRequest) (*api.Book, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBook", arg0, arg1)
	ret0, _ := ret[0].(*api.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBook indicates an expected call of GetBook
func (mr *MockBookstoreServerMockRecorder) GetBook(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBook", reflect.TypeOf((*MockBookstoreServer)(nil).GetBook), arg0, arg1)
}

// GetShelf mocks base method
func (m *MockBookstoreServer) GetShelf(arg0 context.Context, arg1 *api.GetShelfRequest) (*api.Shelf, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShelf", arg0, arg1)
	ret0, _ := ret[0].(*api.Shelf)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShelf indicates an expected call of GetShelf
func (mr *MockBookstoreServerMockRecorder) GetShelf(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShelf", reflect.TypeOf((*MockBookstoreServer)(nil).GetShelf), arg0, arg1)
}

// ListBooks mocks base method
func (m *MockBookstoreServer) ListBooks(arg0 context.Context, arg1 *api.ListBooksRequest) (*api.ListBooksResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBooks", arg0, arg1)
	ret0, _ := ret[0].(*api.ListBooksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBooks indicates an expected call of ListBooks
func (mr *MockBookstoreServerMockRecorder) ListBooks(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBooks", reflect.TypeOf((*MockBookstoreServer)(nil).ListBooks), arg0, arg1)
}

// ListShelves mocks base method
func (m *MockBookstoreServer) ListShelves(arg0 context.Context, arg1 *emptypb.Empty) (*api.ListShelvesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListShelves", arg0, arg1)
	ret0, _ := ret[0].(*api.ListShelvesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListShelves indicates an expected call of ListShelves
func (mr *MockBookstoreServerMockRecorder) ListShelves(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListShelves", reflect.TypeOf((*MockBookstoreServer)(nil).ListShelves), arg0, arg1)
}
